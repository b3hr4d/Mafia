{"version":3,"sources":["components/GameDetails.tsx","components/AppBar.tsx","AppReducer.tsx","assets/images/mafia.jpg","components/GameCard.tsx","components/GameGround.tsx","components/GameGroundHeader.tsx","components/GameRoles.tsx","components/TakeRole.tsx","components/RoleCard.tsx","components/PlayGame.tsx","AppRouter.tsx","App.tsx","index.tsx"],"names":["GameMode","classic","name","en","icon","classicPro","mafiaNight","mafiaJory","werewolf","godfather","RolesNames","shahrvands","mafias","mostaghel","rooinTan","sniper","keshish","ghazi","kaboy","tofangdar","mohafez","ankabot","farmandeh","ahangar","saghi","feramason","tyler","negahban","bazgo","ghomarbaz","terorist","natasha","vakil","gasos","mardGhavi","yakoza","kharabkar","afsongar","dozd","nato","joker","neron","killer","AllRols","PlayerRols","drawerWidth","useStyles","makeStyles","theme","createStyles","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","display","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","AppBarDrawer","state","dispatch","classes","useTheme","history","useHistory","useState","open","setOpen","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","mode","Drawer","anchor","paper","direction","Divider","List","ListItem","button","push","ListItemIcon","ListItemText","primary","Object","values","map","game","index","type","payload","initialState","players","playerRoles","roles","finalRoles","HeaderReducer","action","root","minWidth","maxWidth","media","height","title","textAlign","GameCard","link","Card","CardActionArea","CardMedia","image","MafiaImage","CardContent","gutterBottom","component","paddingTop","GameGround","console","log","Grid","container","item","md","xs","length","paddingBottom","devider","marginBottom","GameGroundHeader","location","useLocation","pathname","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","id","value","onChange","event","Number","target","startAdornment","InputAdornment","labelWidth","palette","text","buttonPaper","checkedBoxIcon","main","uncheckBoxIcon","secondary","checkBox","cursor","userSelect","border","margin","borderRadius","paddingRight","unCheckBox","GameRoles","totalBad","Math","floor","badRemain","goodRemain","keys","roleName","Paper","i","checked","some","r","pos","role","posItem","findIndex","x","splice","checkboxHandler","size","AccountBox","AccountBoxOutlined","Button","filler","Array","from","_","chipRoot","inputs","names","flexDirection","paddingLeft","TakeRole","remaining","setName","setRole","Chip","label","TextField","random","randomRole","disabled","removed","background","RoleCard","setRemoved","prev","CardHeader","flexFlow","PlayGame","useEffect","player","AppRouter","exact","path","App","useReducer","CssBaseline","createMuiTheme","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","jss","plugins","jssPreset","rtl","ReactDOM","render","StylesProvider","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.df5e589a.chunk.js","sourcesContent":["import SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\n\r\nconst GameMode = {\r\n  classic: { name: \"کلاسیک\", en: \"classic\", icon: <SupervisorAccountIcon /> },\r\n  classicPro: {\r\n    name: \"کلاسیک پیشرفته\",\r\n    en: \"classicPro\",\r\n    icon: <SupervisorAccountIcon />,\r\n  },\r\n  mafiaNight: {\r\n    name: \"شب مافیا\",\r\n    en: \"mafiaNight\",\r\n    icon: <SupervisorAccountIcon />,\r\n  },\r\n  mafiaJory: {\r\n    name: \"مافیا ژوری\",\r\n    en: \"mafiaJory\",\r\n    icon: <SupervisorAccountIcon />,\r\n  },\r\n  werewolf: { name: \"ور ولف\", en: \"werewolf\", icon: <SupervisorAccountIcon /> },\r\n  godfather: {\r\n    name: \"پدرخوانده \",\r\n    en: \"godfather\",\r\n    icon: <SupervisorAccountIcon />,\r\n  },\r\n} as const;\r\n\r\nexport default GameMode;\r\n\r\nexport type Sharvands = typeof PlayerRols.shahrvands;\r\n\r\nexport type Mafias = typeof PlayerRols.mafias;\r\n\r\nexport type Mostaghel = typeof PlayerRols.mostaghel;\r\n\r\nexport interface IPlayerRoles {\r\n  shahrvands: Array<keyof Sharvands>;\r\n  mafias: Array<keyof Mafias>;\r\n  mostaghel?: Array<keyof Mostaghel>;\r\n}\r\n\r\nexport type IFinalRoles = Array<\r\n  keyof Sharvands | keyof Mafias | keyof Mostaghel\r\n>;\r\n\r\nexport const RolesNames = {\r\n  shahrvands: \"شهروند\",\r\n  mafias: \"مافیا\",\r\n  mostaghel: \"مستقل\",\r\n};\r\nexport const shahrvands = {\r\n  rooinTan: \"رویین تن\",\r\n  sniper: \"اسنایپر\",\r\n  keshish: \"کشیش\",\r\n  ghazi: \"قاضی\",\r\n  kaboy: \"کابوی\",\r\n  tofangdar: \"تفنگدار\",\r\n  mohafez: \"محافظ\",\r\n  ankabot: \"عنکبوت\",\r\n  farmandeh: \"فرمانده\",\r\n  ahangar: \"اهنگر\",\r\n  saghi: \"ساقی\",\r\n  feramason: \"فراماسون\",\r\n  tyler: \"تایلر\",\r\n  negahban: \"نگهبان\",\r\n  bazgo: \"بازجو\",\r\n  ghomarbaz: \"قمارباز\",\r\n};\r\nexport const mafias = {\r\n  godfather: \"گادفادر\",\r\n  terorist: \"تروریست\",\r\n  natasha: \"ناتاشا\",\r\n  vakil: \"وکیل\",\r\n  gasos: \"جاسوس\",\r\n  mardGhavi: \"مرد قوی\",\r\n  yakoza: \"یاکوزا\",\r\n  kharabkar: \"خرابکار\",\r\n  afsongar: \"افسونگر\",\r\n  dozd: \"دزد\",\r\n  nato: \"ناتو\",\r\n};\r\nexport const mostaghel = {\r\n  joker: \"جوکر\",\r\n  neron: \"نرون\",\r\n  killer: \"کیلر\",\r\n};\r\n\r\nexport const AllRols = {\r\n  ...shahrvands,\r\n  ...mafias,\r\n  ...mostaghel,\r\n} as const;\r\n\r\nexport const PlayerRols = {\r\n  shahrvands,\r\n  mafias,\r\n  mostaghel,\r\n} as const;\r\n","import React, { Dispatch, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport GameMode from \"./GameDetails\";\r\nimport { HeaderAction, GameState, ModeState } from \"../AppReducer\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\ninterface AppBarProps {\r\n  state: GameState;\r\n  dispatch: Dispatch<HeaderAction>;\r\n}\r\n\r\nexport const AppBarDrawer: React.FC<AppBarProps> = ({ state, dispatch }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleDrawerItem = (name: ModeState) => {\r\n    dispatch({ type: \"mode\", payload: name });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            مافیا - {GameMode[state.mode].name}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"خانه\" />\r\n          </ListItem>\r\n          {Object.values(GameMode).map((game, index) => (\r\n            <ListItem\r\n              button\r\n              key={index}\r\n              onClick={() => handleDrawerItem(game.en)}\r\n            >\r\n              <ListItemIcon>{game.icon}</ListItemIcon>\r\n              <ListItemText primary={game.name} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppBarDrawer;\r\n","import GameMode, { IPlayerRoles, IFinalRoles } from \"./components/GameDetails\";\r\n\r\nexport type ModeState = keyof typeof GameMode;\r\n\r\nexport interface GameState {\r\n  mode: ModeState;\r\n  players: number;\r\n  playerRoles: Person[];\r\n  roles: IPlayerRoles;\r\n  finalRoles: IFinalRoles;\r\n}\r\n\r\ninterface Person {\r\n  name: string;\r\n  role: string;\r\n}\r\n\r\nexport const initialState: GameState = {\r\n  mode: \"classicPro\",\r\n  players: 21,\r\n  playerRoles: [],\r\n  roles: {\r\n    shahrvands: [],\r\n    mafias: [],\r\n    mostaghel: [],\r\n  },\r\n  finalRoles: [],\r\n};\r\n\r\nexport type HeaderAction =\r\n  | { type: \"NewGame\" }\r\n  | { type: \"mode\"; payload: ModeState }\r\n  | { type: \"roles\"; payload: IPlayerRoles }\r\n  | { type: \"FinalRoles\"; payload: IFinalRoles }\r\n  | { type: \"playerRoles\"; payload: Person }\r\n  | { type: \"DeleteRoles\"; payload: IPlayerRoles }\r\n  | { type: \"DeletePlayerRoles\" }\r\n  | {\r\n      type: \"players\";\r\n      payload: number;\r\n    };\r\n\r\nexport function HeaderReducer(state: GameState, action: HeaderAction) {\r\n  switch (action.type) {\r\n    case \"mode\":\r\n      return {\r\n        ...state,\r\n        mode: action.payload,\r\n      };\r\n    case \"players\":\r\n      return {\r\n        ...state,\r\n        players: action.payload,\r\n        finalRoles: [],\r\n        roles: { shahrvands: [], mafias: [], mostaghel: [] },\r\n      };\r\n    case \"playerRoles\":\r\n      return {\r\n        ...state,\r\n        playerRoles: [...state.playerRoles, action.payload],\r\n      };\r\n    case \"DeletePlayerRoles\":\r\n      return {\r\n        ...state,\r\n        playerRoles: [],\r\n      };\r\n    case \"DeleteRoles\":\r\n      return {\r\n        ...state,\r\n        roles: { shahrvands: [], mafias: [], mostaghel: [] },\r\n      };\r\n    case \"roles\":\r\n      return {\r\n        ...state,\r\n        roles: action.payload,\r\n      };\r\n    case \"FinalRoles\":\r\n      return {\r\n        ...state,\r\n        finalRoles: action.payload,\r\n      };\r\n    case \"NewGame\":\r\n      return {\r\n        ...state,\r\n        finalRoles: [],\r\n        roles: { shahrvands: [], mafias: [], mostaghel: [] },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mafia.9742db38.jpg\";","import React, { Dispatch } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MafiaImage from \"../assets/images/mafia.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HeaderAction } from \"../AppReducer\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 180,\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\ninterface GameCardProps {\r\n  title: string;\r\n  link: string;\r\n  dispatch: Dispatch<HeaderAction>;\r\n}\r\n\r\nconst GameCard: React.FC<GameCardProps> = ({ title, link, dispatch }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const cardHandler = () => {\r\n    dispatch({ type: \"NewGame\" });\r\n    history.push(link);\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={cardHandler}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={MafiaImage}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GameCard;\r\n","import React, { Dispatch } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GameCard from \"./GameCard\";\r\nimport { GameState, HeaderAction } from \"../AppReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    paper: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface GameGroundProps {\r\n  state: GameState;\r\n  dispatch: Dispatch<HeaderAction>;\r\n}\r\n\r\nexport const GameGround: React.FC<GameGroundProps> = ({ state, dispatch }) => {\r\n  const classes = useStyles();\r\n  console.log(state);\r\n  return (\r\n    <Grid container spacing={3} className={classes.root}>\r\n      <Grid item md={6} xs={12} className={classes.paper}>\r\n        <GameCard title=\"بازی جدید\" link=\"/roles\" dispatch={dispatch} />\r\n      </Grid>\r\n      {state.playerRoles.length ? (\r\n        <Grid item md={6} xs={12} className={classes.paper}>\r\n          <GameCard title=\"دیدن نقشها\" link=\"/play\" dispatch={dispatch} />\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { Dispatch } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { HeaderAction, GameState } from \"../AppReducer\";\r\nimport GameMode from \"./GameDetails\";\r\nimport {\r\n  FormControl,\r\n  Grid,\r\n  OutlinedInput,\r\n  InputLabel,\r\n  InputAdornment,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    devider: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n  })\r\n);\r\n\r\ninterface GameGroundProps {\r\n  state: GameState;\r\n  dispatch: Dispatch<HeaderAction>;\r\n}\r\n\r\nexport const GameGroundHeader: React.FC<GameGroundProps> = ({\r\n  state,\r\n  dispatch,\r\n}) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch({\r\n      type: \"players\",\r\n      payload: Number(event.target.value),\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className={classes.drawerHeader} />\r\n      <Grid container className={classes.drawerHeader} item xs={12} spacing={1}>\r\n        <Grid item xs={12} md={6}>\r\n          <Typography variant=\"h5\" className={classes.paper}>\r\n            {GameMode[state.mode].name}\r\n          </Typography>\r\n        </Grid>\r\n        {location.pathname === \"/\" ||\r\n          (location.pathname === \"/roles\" && (\r\n            <Grid item xs={12} md={6}>\r\n              <FormControl\r\n                fullWidth\r\n                className={classes.paper}\r\n                variant=\"outlined\"\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-amount\">\r\n                  تعداد بازیکنان\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-amount\"\r\n                  value={state.players}\r\n                  type=\"number\"\r\n                  onChange={handleChange}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">نفر</InputAdornment>\r\n                  }\r\n                  labelWidth={95}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n      <Divider variant=\"middle\" className={classes.devider} />\r\n    </>\r\n  );\r\n};\r\n","// @ts-nocheck\r\nimport React, { Dispatch } from \"react\";\r\nimport { PlayerRols, RolesNames } from \"./GameDetails\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { AccountBox, AccountBoxOutlined } from \"@material-ui/icons\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport { GameState, HeaderAction } from \"../AppReducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.primary,\r\n    },\r\n    buttonPaper: {\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.primary,\r\n      padding: theme.spacing(1),\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    button: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n    checkedBoxIcon: {\r\n      padding: theme.spacing(0.5),\r\n      color: theme.palette.primary.main,\r\n    },\r\n    uncheckBoxIcon: {\r\n      padding: theme.spacing(0.5),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    checkBox: {\r\n      cursor: \"pointer\",\r\n      color: theme.palette.primary.main,\r\n      userSelect: \"none\",\r\n      display: \"inline-flex\",\r\n      alignItems: \"center\",\r\n      border: `1px solid ${theme.palette.primary.main}`,\r\n      width: \"125px\",\r\n      margin: theme.spacing(1),\r\n      borderRadius: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    unCheckBox: {\r\n      cursor: \"pointer\",\r\n      color: theme.palette.text.secondary,\r\n      userSelect: \"none\",\r\n      display: \"inline-flex\",\r\n      alignItems: \"center\",\r\n      border: \"1px solid\",\r\n      width: \"125px\",\r\n      margin: theme.spacing(1),\r\n      borderRadius: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ninterface GameRolesProps {\r\n  state: GameState;\r\n  dispatch: Dispatch<HeaderAction>;\r\n}\r\n\r\nexport const GameRoles: React.FC<GameRolesProps> = ({ state, dispatch }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const totalBad = Math.floor(state.players / 3);\r\n\r\n  const badRemain =\r\n    totalBad - state.roles.mafias.length - state.roles.mostaghel.length;\r\n\r\n  const goodRemain = state.players - totalBad - state.roles.shahrvands.length;\r\n\r\n  const checkboxHandler = ({ pos, role }) => {\r\n    const posItem = state.roles[pos];\r\n    const index = posItem.findIndex((x) => x === role);\r\n    if (index === -1) {\r\n      if (pos === \"shahrvands\" && goodRemain <= 0) {\r\n        return;\r\n      } else if (pos === \"mafias\" && badRemain <= 0) {\r\n        return;\r\n      } else if (pos === \"mostaghel\" && badRemain <= 0) {\r\n        return;\r\n      }\r\n      posItem.push(role);\r\n    } else {\r\n      posItem.splice(index, 1);\r\n    }\r\n    dispatch({\r\n      type: \"roles\",\r\n      payload: {\r\n        ...state.roles,\r\n        [pos]: [...posItem],\r\n      },\r\n    });\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    let filler = [\r\n      ...state.roles.shahrvands,\r\n      ...state.roles.mafias,\r\n      ...state.roles.mostaghel,\r\n    ];\r\n\r\n    if (goodRemain > 0) {\r\n      Array.from(Array(goodRemain), (_) => filler.push(\"shahrvandSade\"));\r\n    }\r\n    if (badRemain > 0) {\r\n      Array.from(Array(badRemain), (_) => filler.push(\"mafiaSade\"));\r\n    }\r\n    console.log(filler, state.roles);\r\n    dispatch({\r\n      type: \"FinalRoles\",\r\n      payload: filler,\r\n    });\r\n    history.push(\"/takerol\");\r\n  };\r\n  const deleteHandler = () => {\r\n    dispatch({\r\n      type: \"DeleteRoles\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        {Object.keys(RolesNames).map((roleName) => (\r\n          <Grid item md={4} xs={12} key={roleName}>\r\n            <Paper className={classes.paper}>\r\n              <Typography className={classes.title}>\r\n                نقش های {RolesNames[roleName]} ({\" \"}\r\n                {roleName === \"shahrvands\" ? goodRemain : badRemain} )\r\n              </Typography>\r\n              {Object.keys(PlayerRols[roleName]).map((roles, i) => {\r\n                const checked = state.roles[roleName].some((r) => r === roles);\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className={checked ? classes.checkBox : classes.unCheckBox}\r\n                    onClick={() =>\r\n                      checkboxHandler({ pos: roleName, role: roles })\r\n                    }\r\n                  >\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      className={\r\n                        checked\r\n                          ? classes.checkedBoxIcon\r\n                          : classes.uncheckBoxIcon\r\n                      }\r\n                      id={PlayerRols[roleName][roles]}\r\n                    >\r\n                      {checked ? <AccountBox /> : <AccountBoxOutlined />}\r\n                    </IconButton>\r\n                    {PlayerRols[roleName][roles]}\r\n                  </div>\r\n                );\r\n              })}\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Grid container spacing={1} className={classes.paper}>\r\n        <Grid item md={4} xs={6}>\r\n          <Paper className={classes.buttonPaper}>\r\n            شهروند ساده: {goodRemain}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={4} xs={6}>\r\n          <Paper className={classes.buttonPaper}>مافیا ساده: {badRemain}</Paper>\r\n        </Grid>\r\n        <Grid item md={1} xs={4}>\r\n          <Button\r\n            onClick={deleteHandler}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n          >\r\n            X\r\n          </Button>\r\n        </Grid>\r\n        <Grid item md={3} xs={8}>\r\n          <Button\r\n            onClick={submitHandler}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n          >\r\n            ادامه\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  TextField,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Chip,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { Dispatch, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GameState, HeaderAction } from \"../AppReducer\";\r\nimport { AllRols } from \"./GameDetails\";\r\n\r\ninterface TakeRoleProps {\r\n  state: GameState;\r\n  dispatch: Dispatch<HeaderAction>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 600,\r\n      margin: \"auto\",\r\n    },\r\n    chipRoot: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    inputs: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      padding: theme.spacing(2),\r\n    },\r\n    names: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      textAlign: \"center\",\r\n    },\r\n    button: {\r\n      display: \"flex\",\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nexport const TakeRole: React.FC<TakeRoleProps> = ({ state, dispatch }) => {\r\n  const remaining = state.players - state.playerRoles.length;\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const inputHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const backHandler = () => {\r\n    dispatch({\r\n      type: \"DeletePlayerRoles\",\r\n    });\r\n    history.push(\"/roles\");\r\n  };\r\n\r\n  const nextPersonHandler = () => {\r\n    setName(\"\");\r\n    setRole(\"\");\r\n  };\r\n\r\n  const takeRoleHandler = () => {\r\n    const index = Math.floor(Math.random() * remaining);\r\n    let randomRole = state.finalRoles[index];\r\n    state.finalRoles.splice(index, 1);\r\n    setRole(randomRole);\r\n    dispatch({\r\n      type: \"playerRoles\",\r\n      payload: {\r\n        name,\r\n        role: randomRole,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid xs={12} item className={classes.inputs}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={backHandler}\r\n          fullWidth\r\n        >\r\n          بازگشت به انتخاب نقش\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.chipRoot}>\r\n        <Chip label={`نفر: ${state.playerRoles.length}`} />\r\n        <Chip label={`باقیمانده: ${remaining}`} />\r\n      </Grid>\r\n      <Grid xs={12} item className={classes.inputs}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            id=\"outlined-secondary\"\r\n            label=\"نام\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            value={name}\r\n            onChange={inputHandler}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.button}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={takeRoleHandler}\r\n            disabled={name.length < 3 || !!!remaining || !!role}\r\n            fullWidth\r\n          >\r\n            گرفتن نقش\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid xs={12} item className={classes.inputs}>\r\n        <Grid item xs={6} className={classes.names}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            اسم\r\n          </Typography>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {name}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.names}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            نقش\r\n          </Typography>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {/* @ts-ignore */}\r\n            {AllRols[role]}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      {!!remaining ? (\r\n        <Grid xs={12} item className={classes.inputs}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={nextPersonHandler}\r\n            disabled={!!!role}\r\n            fullWidth\r\n          >\r\n            نفر بعدی\r\n          </Button>\r\n        </Grid>\r\n      ) : (\r\n        <Grid xs={12} item className={classes.inputs}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            onClick={() => history.push(\"/play\")}\r\n          >\r\n            دیدن نقشها\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MafiaImage from \"../assets/images/mafia.jpg\";\r\nimport { Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { AllRols } from \"./GameDetails\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minWidth: 150,\r\n      maxWidth: 200,\r\n      margin: theme.spacing(3),\r\n    },\r\n    removed: {\r\n      minWidth: 150,\r\n      maxWidth: 200,\r\n      background: \"red\",\r\n      margin: theme.spacing(3),\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n    title: {\r\n      textAlign: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface RoleCardProps {\r\n  role: keyof typeof AllRols;\r\n  name: string;\r\n}\r\n\r\nconst RoleCard: React.FC<RoleCardProps> = ({ role, name }) => {\r\n  const [removed, setRemoved] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={removed ? classes.removed : classes.root}>\r\n      <CardActionArea onClick={() => setRemoved((prev) => !prev)}>\r\n        <CardHeader title={AllRols[role]} />\r\n        <CardMedia className={classes.media} image={MafiaImage} title={role} />\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n          >\r\n            {name}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RoleCard;\r\n","import { createStyles, makeStyles, Paper, Theme } from \"@material-ui/core\";\r\nimport React, { Dispatch, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GameState, HeaderAction } from \"../AppReducer\";\r\nimport RoleCard from \"./RoleCard\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      textAlign: \"center\",\r\n      display: \"flex\",\r\n      flexFlow: \"wrap\",\r\n      padding: theme.spacing(2),\r\n      justifyContent: \"space-between\",\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\ninterface PlaygameProps {\r\n  state: GameState;\r\n  dispatch: Dispatch<HeaderAction>;\r\n}\r\n\r\nexport const PlayGame: React.FC<PlaygameProps> = ({ state }) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (state.playerRoles.length < 6) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [state.playerRoles, history]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        {state.playerRoles.map((player, i) => (\r\n          // @ts-ignorets\r\n          <RoleCard key={i} role={player.role} name={player.name} />\r\n        ))}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Dispatch } from \"react\";\r\nimport { GameGround } from \"./components/GameGround\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { GameGroundHeader } from \"./components/GameGroundHeader\";\r\nimport { GameRoles } from \"./components/GameRoles\";\r\nimport { TakeRole } from \"./components/TakeRole\";\r\nimport { PlayGame } from \"./components/PlayGame\";\r\nimport { HeaderAction, GameState } from \"./AppReducer\";\r\n\r\ninterface AppRouterProps {\r\n  state: GameState;\r\n  dispatch: Dispatch<HeaderAction>;\r\n}\r\n\r\nexport const AppRouter: React.FC<AppRouterProps> = ({ state, dispatch }) => {\r\n  return (\r\n    <>\r\n      <GameGroundHeader state={state} dispatch={dispatch} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <GameGround state={state} dispatch={dispatch} />\r\n        </Route>\r\n        <Route path=\"/roles\">\r\n          <GameRoles state={state} dispatch={dispatch} />\r\n        </Route>\r\n        <Route path=\"/takerol\">\r\n          <TakeRole state={state} dispatch={dispatch} />\r\n        </Route>\r\n        <Route path=\"/play\">\r\n          <PlayGame state={state} dispatch={dispatch} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport AppBarDrawer from \"./components/AppBar\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { HeaderReducer, initialState } from \"./AppReducer\";\nimport { AppRouter } from \"./AppRouter\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n  })\n);\n\nfunction App() {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(HeaderReducer, initialState);\n  console.log(state);\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Router>\n        <AppBarDrawer state={state} dispatch={dispatch} />\n        <main className={classes.content}>\n          <AppRouter state={state} dispatch={dispatch} />\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { create } from \"jss\";\nimport rtl from \"jss-rtl\";\nimport {\n  StylesProvider,\n  jssPreset,\n  ThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  direction: \"rtl\",\n  typography: {\n    fontFamily: `\"Vazir\", \"Helvetica\", \"Arial\", sans-serif`,\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n});\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nReactDOM.render(\n  <StylesProvider jss={jss}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </StylesProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}